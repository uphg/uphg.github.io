import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.BHpayLOB.js";const u=JSON.parse('{"title":"Windows 畅玩 Claude Code","description":"","frontmatter":{"title":"Windows 畅玩 Claude Code","created":"2025-06-30T13:32:39.000Z","updated":"2025-06-30T13:32:39.000Z","tags":["Claude Code"],"next":{"text":"编程开发核心概念","link":"/post/core-concept"}},"headers":[],"relativePath":"post/use-claude-code-router.md","filePath":"post/use-claude-code-router.md","lastUpdated":1751338633000}'),n={name:"post/use-claude-code-router.md"};function l(h,s,p,d,o,k){return t(),a("div",null,s[0]||(s[0]=[e(`<blockquote><p>无需海外账号，用阿里大模型 API 实现 Claude Code 的完美替代方案</p></blockquote><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>由于 Anthropic 官方限制了中国区用户访问，即使注册了账号也无法正常使用 Claude Code。今天分享的技术方案，通过 <strong>Claude Code Router路由工具</strong> + <strong>阿里通义千问API</strong>，可以让国内的 Windows 用户也能无缝使用 Claude Code。</p><h2 id="环境准备-wsl2中的linux环境" tabindex="-1">环境准备（WSL2中的Linux环境） <a class="header-anchor" href="#环境准备-wsl2中的linux环境" aria-label="Permalink to &quot;环境准备（WSL2中的Linux环境）&quot;">​</a></h2><p>由于 Claude Code 仅支持 Linux 平台，我们需要在 Windows 中启用 WSL2，安装教程可以参考：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/install" target="_blank" rel="noreferrer">如何使用 WSL 在 Windows 上安装 Linux</a></p><h2 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h2><h3 id="基础环境配置" tabindex="-1">基础环境配置 <a class="header-anchor" href="#基础环境配置" aria-label="Permalink to &quot;基础环境配置&quot;">​</a></h3><p>为了避免在 WSL2 中安装时的 <code>Claude Code is not supported on Windows</code> 错误，需要重新安装 Node.js 和 npm，如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 必须重新安装 Node.js 环境</span></span></code></pre></div><h3 id="安装-claude-code-router" tabindex="-1">安装 Claude Code Router <a class="header-anchor" href="#安装-claude-code-router" aria-label="Permalink to &quot;安装 Claude Code Router&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 Claude Code 本体</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @anthropic-ai/claude-code</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 Claude Code Router</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @musistudio/claude-code-router</span></span></code></pre></div><h2 id="配置大模型-api-接入" tabindex="-1">配置大模型 API 接入 <a class="header-anchor" href="#配置大模型-api-接入" aria-label="Permalink to &quot;配置大模型 API 接入&quot;">​</a></h2><h3 id="配置文件路径" tabindex="-1">配置文件路径 <a class="header-anchor" href="#配置文件路径" aria-label="Permalink to &quot;配置文件路径&quot;">​</a></h3><p><code>~/.claude-code-router/config.json</code><br><em>注：使用sudo安装，路径为<code>/root/.claude-code-router/config.json</code></em></p><h3 id="推荐配置-阿里通义千问示例" tabindex="-1">推荐配置（阿里通义千问示例） <a class="header-anchor" href="#推荐配置-阿里通义千问示例" aria-label="Permalink to &quot;推荐配置（阿里通义千问示例）&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;OPENAI_API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的 API 密钥&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;OPENAI_BASE_URL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://dashscope.aliyuncs.com/compatible-mode/v1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;OPENAI_MODEL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen-plus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Providers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;api_base_url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://dashscope.aliyuncs.com/compatible-mode/v1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;api_key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的 API 密钥&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;models&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen-max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen-turbo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen-plus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Router&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen,qwen-plus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 日常任务</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;think&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen,qwen-max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复杂推理</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;longContext&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwen,qwen-max&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 长文本处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="配置项说明" tabindex="-1">配置项说明 <a class="header-anchor" href="#配置项说明" aria-label="Permalink to &quot;配置项说明&quot;">​</a></h3><ol><li><strong>全局 OpenAI 兼容配置</strong><ul><li><code>OPENAI_API_KEY</code>: 用于访问 OpenAI 兼容 API 的密钥（这里是阿里 DashScope 的密钥）</li><li><code>OPENAI_BASE_URL</code>: 基础 API 地址（已指向阿里 DashScope 的兼容模式端点）</li><li><code>OPENAI_MODEL</code>: 默认使用的模型（已设置为阿里的 <code>qwen-plus</code>）</li></ul></li><li><strong>Providers (模型提供商列表)</strong> 每个提供商包含： <ul><li><code>name</code>: 提供商名称（自定义标识）</li><li><code>api_base_url</code>: 该提供商的 API 地址</li><li><code>api_key</code>: 访问该提供商的 API 密钥</li><li><code>models</code>: 该提供商下可用的模型列表</li></ul></li><li><strong>Router (路由规则)</strong> 定义不同任务类型使用的模型： <ul><li><code>background</code>: 后台/常规任务使用的模型（格式：<code>提供商名,模型名</code>）</li><li><code>think</code>: 复杂推理任务使用的模型</li><li><code>longContext</code>: 长上下文处理任务使用的模型</li></ul></li></ol><h2 id="关于阿里模型" tabindex="-1">关于阿里模型 <a class="header-anchor" href="#关于阿里模型" aria-label="Permalink to &quot;关于阿里模型&quot;">​</a></h2><p>以下是阿里模型常用</p><table tabindex="0"><thead><tr><th>模型名称</th><th>适用场景</th><th>性能特点</th></tr></thead><tbody><tr><td><strong>qwen-turbo</strong></td><td>日常代码补全</td><td>响应最快，成本最低</td></tr><tr><td><strong>qwen-plus</strong></td><td>综合任务（推荐默认）</td><td>平衡精度与速度</td></tr><tr><td><strong>qwen-max</strong></td><td>复杂算法/长上下文</td><td>最强能力，支持128K上下文</td></tr></tbody></table><hr><h2 id="运行-claude-code" tabindex="-1">运行 Claude Code <a class="header-anchor" href="#运行-claude-code" aria-label="Permalink to &quot;运行 Claude Code&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ccr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 通过路由启动 Claude Code</span></span></code></pre></div><p>启动后可在终端直接使用代码补全功能，体验与原版 Claude 基本一致~</p><h2 id="常见故障排除" tabindex="-1">常见故障排除 <a class="header-anchor" href="#常见故障排除" aria-label="Permalink to &quot;常见故障排除&quot;">​</a></h2><h3 id="权限问题" tabindex="-1">权限问题 <a class="header-anchor" href="#权限问题" aria-label="Permalink to &quot;权限问题&quot;">​</a></h3><p>由于 npm 全局包默认安装在 <code>/usr/local/lib/node_modules/</code> 或 <code>/usr/lib/node_modules/</code>，普通用户可能无权访问。</p><p>需要<strong>修改 npm 全局包权限</strong>，让所有用户均可访问 <code>root</code> 安装的全局包，如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修复 root 安装的全局包权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/lib/node_modules/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 备用路径修复（适用于不同安装位置）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib/node_modules/</span></span></code></pre></div><h2 id="claude-code-router-原理" tabindex="-1">Claude Code Router 原理 <a class="header-anchor" href="#claude-code-router-原理" aria-label="Permalink to &quot;Claude Code Router 原理&quot;">​</a></h2><p>关于 <strong>Claude Code Router</strong> 的基本原理：利用环境变量覆盖请求的 BaseURL 和 apiKey，并通过自定义服务将 OpenAI API 转换为 Anthropic API 格式。</p><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="https://github.com/musistudio/claude-code-router" target="_blank" rel="noreferrer">Claude Code Router</a></li><li><a href="https://dashscope.console.aliyun.com/" target="_blank" rel="noreferrer">DashScope 控制台（获取API密钥）</a></li><li><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install" target="_blank" rel="noreferrer">WSL2 安装指南</a></li></ul>`,34)]))}const c=i(n,[["render",l]]);export{u as __pageData,c as default};
