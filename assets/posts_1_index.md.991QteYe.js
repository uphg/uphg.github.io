import{P as r,a as n}from"./chunks/PostsContainer.CutwuT5g.js";import{d as p,c as a,o,G as l,w as d,F as i,B as c,b as u}from"./chunks/framework.BHpayLOB.js";import"./chunks/CustomContainer.D2tcrHcd.js";import"./chunks/theme.CxKxqB40.js";const b=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"posts","sidebar":false,"next":{"text":"Windows 畅玩 Claude Code","link":"/post/use-claude-code-router"}},"headers":[],"params":{"page":1,"next":null,"prev":"/posts/2/","items":[{"title":"Windows 畅玩 Claude Code","created":"2025-06-30T13:32:39.000Z","updated":"2025-06-30T13:32:39.000Z","tags":["Claude Code"],"description":" 无需海外账号，用阿里大模型 API 实现 Claude Code 的完美替代方案  背景 由于 Anthropic 官方限制了中国区用户访问，即使注册了账号也无法正常使用 Claude Code。今天分享的技术方案，通过 Claude Code Router路由工具 + 阿里通义千问API，可以让国内的 Window","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\use-claude-code-router.md","to":"/post/use-claude-code-router"},{"title":"编程开发核心概念","date":"2025-04-13T11:32:53.000Z","tags":["核心概念"],"description":"一、核心概念 1. 编程基础  语法与逻辑：掌握一门编程语言的基本语法（变量、循环、条件判断、函数等）。 数据结构：数组、链表、栈、队列、哈希表、树、图等。 算法：排序、搜索、递归、动态规划、贪心算法等。 时间复杂度与空间复杂度：理解代码效率的评估方法。  2. 编程范式  面向对象编程（OOP）：类、对象、继承、多态","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\core-concept.md","to":"/post/core-concept"},{"title":"Python 面向对象高级编程","date":"2025-04-08T13:33:47.000Z","tags":["Python","面向对象"],"description":"数据封装、继承和多态只是面向对象程序设计中最基础的 3 个概念。在 Python 中，面向对象还有很多种高级特性。 使用 __slots__ 限制实例属性 Python的动态特性允许实例的任意属性绑定，但有时需要约束这种灵活性： 动态绑定机制 class Student:     pass  s = Student()","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\python-oop-advanced.md","to":"/post/python-oop-advanced"},{"title":"Python 面向对象编程","date":"2025-04-08T12:55:15.000Z","tags":["Python","面向对象"],"description":"核心概念 面向对象编程（OOP）以对象为程序基本单元，每个对象包含数据属性和操作数据的方法。与面向过程编程的线性执行不同，OOP通过对象间的消息传递实现程序逻辑。 编程范式对比   面向过程：程序由函数串行组成，通过分解函数降低复杂度 # 学生成绩处理（面向过程） std1 = {'name': 'Michael', ","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\python-oop.md","to":"/post/python-oop"},{"title":"Python 模块详解","date":"2025-04-07T13:22:26.000Z","tags":["Python","模块"],"description":"模块结构与规范 以下是以内建 sys 模块为例的标准模块模板： #!/usr/bin/env python3 # -*- coding: utf-8 -*-  &quot;&quot;&quot; 模块文档注释（使用三引号规范） &quot;&quot;&quot;  __author__ = 'Michael Lia","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\py-module.md","to":"/post/py-module"},{"title":"Python 函数式编程","date":"2025-03-31T13:26:13.000Z","tags":["Python","编程范式","函数式编程"],"description":"高阶函数 map函数实践 通过将函数作用于可迭代对象的每个元素实现批量处理： def square(x):     return x * x  result = map(square, range(1,10)) print(list(result))  # [1, 4, 9, ..., 81]  特性说明：  map(","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\py-functional.md","to":"/post/py-functional"},{"title":"Cline MCP 入门指南","date":"2025-03-30T10:10:21.000Z","tags":["MCP"],"description":"前置条件  ✅ 最新版本的 Node.js（v18 或更高）  检查方法：运行 node --version 安装来源：https://nodejs.org/   ✅ 最新版本的 Python（v3.8 或更高）  检查方法：运行 python --version 安装来源：https://python.org/   ","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\mcp-server.md","to":"/post/mcp-server"},{"title":"Python 高级特性","date":"2025-03-29T11:21:32.000Z","tags":["Python"],"description":"切片 切片（Slice）操作是Python中高效处理序列数据的核心特性，基本语法为[start:end:step]，包含start索引元素，不包含end索引元素。 基础用法 # 创建测试列表 L = ['Michael', 'Sarah', 'Tracy', 'Bob', 'Jack']  # 取前3元素（0,1,2索","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\py-features.md","to":"/post/py-features"},{"title":"Python 函数","date":"2025-03-27T12:07:32.000Z","tags":["Python"],"description":"内置函数调用 Python内置函数如abs()可直接调用，需注意参数数量和类型： &gt;&gt;&gt; abs(-20)    # 正确调用 20 &gt;&gt;&gt; abs('a')    # 类型错误 TypeError: bad operand type for abs(): 'str' &gt;&gt","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\py-function.md","to":"/post/py-function"},{"title":"Python 基础","date":"2025-03-25T11:15:47.000Z","tags":["Python"],"description":"Python 基础 数据类型 整数 10_000_000_000    # 支持千分位分隔符（Python 3.6+） 0xa1b2_c3d4       # 十六进制表示（Python 3.6+）  浮点数 1.23e9            # 1.23 × 10⁹（科学计数法） 1.2e-5           ","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\py-base.md","to":"/post/py-base"}],"total":3},"relativePath":"posts/1/index.md","filePath":"posts/[page]/index.md","lastUpdated":1714266532000}`),P={name:"posts/1/index.md"},_=p({...P,setup(h){return(t,m)=>(o(),a("div",null,[l(n,{title:"博客列表",next:t.$params.next,prev:t.$params.prev,page:t.$params.page,total:t.$params.total},{default:d(()=>[(o(!0),a(i,null,c(t.$params.items,(e,s)=>(o(),u(r,{key:s,title:e.title,to:e.to,description:e.description,date:e.date,tags:e.tags},null,8,["title","to","description","date","tags"]))),128))]),_:1},8,["next","prev","page","total"])]))}});export{b as __pageData,_ as default};
