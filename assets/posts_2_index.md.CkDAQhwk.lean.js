import{P as i,a as r}from"./chunks/PostsContainer.CutwuT5g.js";import{d as l,c as a,o,G as n,w as p,F as c,B as d,b as m}from"./chunks/framework.BHpayLOB.js";import"./chunks/CustomContainer.D2tcrHcd.js";import"./chunks/theme.CxKxqB40.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"posts","sidebar":false,"next":{"text":"Windows 畅玩 Claude Code","link":"/post/use-claude-code-router"}},"headers":[],"params":{"page":2,"next":"/posts/1/","prev":"/posts/3/","items":[{"title":"Python 的安装与开发环境构建（Windows）","date":"2025-03-23T11:20:42.000Z","tags":["Python"],"description":"安装 1. 下载安装包 访问 Python 官网，选择最新稳定版本（如 Python 3.x），根据系统位数（32 位或 64 位）下载 Windows Installer (64-bit/32-bit) 的.exe文件。 注意：下载 executable installer 版本 2. 右键以管理员身份运行安装程序，","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\py-install.md","to":"/post/py-install"},{"title":"React 函数式编程的要点","date":"2024-10-17T01:06:52.000Z","tags":["React","函数式编程"],"description":"React 函数式编程的核心理念 在使用 React 进行函数式编程时，有几个关键点需要牢记：  关注依赖关系，而非执行顺序：函数式编程更注重组件和函数之间的依赖关系，而不是代码的执行顺序。 隔离副作用：函数式编程的目标是将副作用（如数据获取、DOM 操作等）限制在小范围内，防止它们影响整体程序的纯度。 保持纯函数：在","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\react-functional.md","to":"/post/react-functional"},{"title":"Git 命令手册","tags":["Git","Command"],"categories":["教程"],"date":"2024-05-05T10:30:23.000Z","description":"提交代码 # 提交至暂存区 $ git add .  # 提交暂存区到仓库区 $ git commit -m [提交说明]   # 提交时显示所有差异信息 (diff) $ git commit -v  # 取回远程仓库的变化，并与本地分支合并 $ git pull [远程主机名] [远程分支名]:[本地分支名]  #","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\git-book.md","to":"/post/git-book"},{"title":"「转」UI 设计的 16 条原则","date":"2023-11-14T21:42:30.000Z","description":"UI 设计并没有那么复杂。在我两年的产品设计师生涯中，我意识到大部分视觉和交互设计的都遵守几个简单的逻辑规则。不是艺术天赋或直觉，只是几个简单的规则。 最快速的学习就是实践，所以让我们开始吧。 使用逻辑规则修复此示例 以下是一个短期业务租贷应用程序的物业详情页。第一个是原版，第二个是根据我的规则改进的版本。  即使你没","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\ui-design.md","to":"/post/ui-design"},{"title":"如何活的更久一点","date":"2022-03-06T09:27:37.000Z","description":"最近看 b 站的 一个视频 什么样的人死的更快？【围炉夜话】 讲了什么样的人更长寿，什么样的人更短寿。 总结一下视频中的结论： 首先影响寿命的很重要的因素，是我们体内的端粒。端粒的长短跟基因有关，也跟后天影响有关。 后天影响分为物理攻击和魔法攻击，物理攻击包括不健康的生活习惯，接触化学污染等等。 魔法攻击则是压力，特别","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\live-longer.md","to":"/post/live-longer"},{"title":"Event Loop","date":"2022-02-03T11:48:27.000Z","tags":["JavaScript","Event Loop","process.nextTick()"],"description":"当 JavaScript 执行一个异步任务的时候（如：AJAX），JavaScript 什么都不会做，它只会通知 C++（单线程），C++ 通过轮询来查看延时任务什么时候完成，完成了再通知 JavaScript 继续执行该任务。EventLoop 就是 C++ 如何通过轮询执行 JavaScript 异步任务（也可以说","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\event-loop.md","to":"/post/event-loop"},{"title":"内存管理","date":"2021-12-08T08:27:21.000Z","tags":["JavaScript"],"description":"本文转自内存管理 - JavaScript | MDN 简介 像C语言这样的底层语言一般都有底层的内存管理接口，比如 malloc()和free()。相反，JavaScript 是在创建变量（对象，字符串等）时自动进行了分配内存，并且在不使用它们时“自动”释放。 释放的过程称为垃圾回收。这个“自动”是混乱的根源，并让 ","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\memory-management.md","to":"/post/memory-management"},{"title":"CSS 变量","date":"2021-11-12T06:29:58.000Z","tags":["CSS"],"description":"声明变量 CSS 变量声明时，前面要加 -- body {   --foo: #000000;   --bar: #F7EFD2; }  各种值都可以放入 CSS 变量。 :root{   --main-color: #4d4e53;   --main-bg: rgb(255, 255, 255);   --logo-","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\css-var.md","to":"/post/css-var"},{"title":"Git 使用规范","date":"2021-11-10T08:52:23.000Z","tags":["git"],"description":"Git 仓库操作规范总结 分支管理策略 主分支 首先代码应该有且仅有一个主分支，项目的正式版本，都在这个主分支上发布。 Git 主分支的默认名为 master，但是由于 master 一词打擦边球，所以建议使用 main 作为默认分支名称，从 Git 2.28 开始，可以通过设置 init.defaultBranch ","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\git-usage-specification.md","to":"/post/git-usage-specification"},{"title":"?? 运算符","date":"2021-10-22T03:01:16.000Z","description":"基础语法 ?? 与 || 运算符非常相似，不同的地方在于，?? 语法评估运算符时不使用 &quot;truthy&quot; （真实的）而是 &quot;nullish&quot;（无效的）判断，意思是“值严格等于 null 或 undefined”才会执行后面的内容。 使用 ?? //  false ?? true;","filePath":"F:\\\\Development\\\\Personal\\\\blog-creator\\\\src\\\\post\\\\nullish-coalescing.md","to":"/post/nullish-coalescing"}],"total":3},"relativePath":"posts/2/index.md","filePath":"posts/[page]/index.md","lastUpdated":1714266532000}'),g={name:"posts/2/index.md"},C=l({...g,setup(u){return(t,v)=>(o(),a("div",null,[n(r,{title:"博客列表",next:t.$params.next,prev:t.$params.prev,page:t.$params.page,total:t.$params.total},{default:p(()=>[(o(!0),a(c,null,d(t.$params.items,(e,s)=>(o(),m(i,{key:s,title:e.title,to:e.to,description:e.description,date:e.date,tags:e.tags},null,8,["title","to","description","date","tags"]))),128))]),_:1},8,["next","prev","page","total"])]))}});export{S as __pageData,C as default};
